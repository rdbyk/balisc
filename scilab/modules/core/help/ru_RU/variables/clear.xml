<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 *
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
          xml:lang="ru" xml:id="clear">
    <refnamediv>
        <refname>clear</refname>
        <refpurpose>уничтожает переменные</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Синтаксис</title>
        <synopsis>
            clear a b c
            clear('a','b','c')
            clear(['a' 'b' 'c'])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Аргументы</title>
        <variablelist>
            <varlistentry>
                <term>a, b, c...</term>
                <listitem>
                    <para>переменные любого типа и размера, но не защищённые.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Описание</title>
        <para>
            Эта команда уничтожает переменные, которые не защищены. Она удаляет
            перечисленные переменные из окружения. Само по себе, без аргументов, <code>clear</code>
            уничтожает все переменные за исключением переменных, защищённых с помощью
            <code>protect</code>. Таким образом, две команды <code>unprotect()</code> и
            <code>clear</code> уничтожают все переменные.
        </para>
        <para>
            Обычно защищёнными переменными являются стандартные библиотеки и переменные с префиксом процента.
        </para>
        <para>
            <note>
                Обратите внимание на особый синтаксис <code>clear a b c</code> и
                <code>clear('a','b','c')</code>, а не <code>clear(a,b,c)</code>. Обратите
                также внимание на то, что <code>a=[]</code> не уничтожает <varname>a</varname>, а
                устанавливает <varname>a</varname> пустой матрицей.
            </note>
        </para>
        <para>
            Если имя <emphasis>Var</emphasis> не совпадает ни с одной из переменных, то
             <literal>clear Var</literal> тихо ничего не делает.
        </para>
      <note>
        <literal>clear()</literal> может быть перегружена для любого типа <literal>mlist("foo")</literal>,
        с помощью определения макроса <literal>%foo_clear()</literal>. Он вызывается либо когда
        <literal>clear</literal> напрямую применяется к любому mlist-списку этого типа, либо неявно,
        когда любой mlist-список этого типа удалён при выходе из окружения, в котором он был определён.
      </note>
    </refsection>
    <refsection>
        <title>Примеры</title>
        <programlisting role="example"><![CDATA[
a = 2;
b = 3;
c = 4;
clear a
isdef("a") // F
isdef("b") // T
clear("b");
isdef("b") // F

a = 2;
b = 3;
c = 4;
clear(['a' 'b' 'c'])
isdef("a") | isdef("b") | isdef("c") // F
     ]]></programlisting>
        <programlisting role="example"><![CDATA[
function %foo_clear(o)
    disp("deleted");
endfunction

value = mlist("foo");
clear value // будет напечатано "deleted"
]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Смотрите также</title>
        <simplelist type="inline">
            <member>
                <link linkend="protect">protect</link>
            </member>
            <member>
                <link linkend="unprotect">unprotect</link>
            </member>
            <member>
                <link linkend="clearglobal">clearglobal</link>
            </member>
            <member>
                <link linkend="funcprot">funcprot</link>
            </member>
            <member>
                <link linkend="who">who</link>
            </member>
            <member>
                <link linkend="xmlDelete">xmlDelete</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>История</title>
        <revhistory>
            <revision>
                <revnumber>5.5.0</revnumber>
                <revdescription>Теперь аргумент может быть матрицей строк</revdescription>
            </revision>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revdescription>
                  Теперь <literal>clear</literal> защищена:
                  такие присвоения, как <literal>clear=1</literal>, более невозможны.
                </revdescription>
            </revision>
            <revision>
                <revnumber>6.1.0</revnumber>
                <revdescription>
                    <literal>clear</literal> становится перегружаемой для любого
                    <literal>mlist("foo")</literal> с помощью <literal>%foo_clear()</literal>.
                </revdescription>
            </revision>
            <revision>
                <revnumber>Balisc 1</revnumber>
                <revdescription>Introduced <code>protect</code> and <code>unprotect</code>.</revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
