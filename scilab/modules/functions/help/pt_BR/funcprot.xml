<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:id="funcprot" xml:lang="pt">
    <refnamediv>
        <refname>funcprot</refname>
        <refpurpose>alterna o modo de proteção de funções Scilab</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Seqüência de Chamamento</title>
        <synopsis>funcprot(prot)
            previousprot = funcprot(prot)
            prot = funcprot()
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parâmetros</title>
        <variablelist>
            <varlistentry>
                <term>prot</term>
                <listitem>
                    <para>inteiro com valores possíveis 0,1 ou 2</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para>
            Funções Scilab são variáveis, <function>funcprot</function> permite especificar o que o
            Scilab faz quando tais variáveis são redefinidas.
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    Se <code>prot==0</code> nada especial é feito
                </para>
            </listitem>
            <listitem>
                <para>
                    Se <code>prot==1</code> o Scilab exibe uma mensagem de aviso quando a função
                    é redefinida (modo padrão)
                </para>
            </listitem>
            <listitem>
                <para>
                    Se <code>prot==2</code> o Scilab exibe uma mensagem de erro quando a função é
                    redefinida
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[
previousprot = funcprot(1)
deff('x = foo(a)','x = a;')
deff('x = foo(a)','x = a + 1;')
foo = 33
funcprot(0)
deff('x = foo(a)', 'x = a;')
deff('x = foo(a)', 'x = a + 1;')
foo = 33
funcprot(previousprot)
]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Ver também</title>
        <simplelist type="inline">
            <member>
                <link linkend="predef">predef</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.4.0</revnumber>
                <revremark>Previous value is returned as output argument when setting a new value.</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
