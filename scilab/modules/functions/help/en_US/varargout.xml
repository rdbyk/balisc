<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ????-2008 - INRIA
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2018 - Dirk Reusch, Kybernetik Dr. Reusch
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:id="varargout" xml:lang="en">
    <refnamediv>
        <refname>varargout</refname>
        <refpurpose>arbitrarily long list of output arguments
        </refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>A function whose output argument list ends with
            <literal>varargout</literal> may be called with more output arguments
            than indicated in the output argument list. The Left-Hand-Side output arguments passed
            at calling time from the <literal>varargout</literal> keyword onwards are extracted
            out of the <literal>varargout</literal> list defined in the function.
        </para>
        <para>
            <literal>varargout = function ex()</literal> may be called with any
            number of output arguments. Within function <literal>ex</literal> output
            arguments may be stored in <literal>varargout(i)</literal>.
        </para>
        <para>
            <literal>[X1,...,Xn,varargout] = function ex()</literal> may also be
            used. In this case the <literal>Xi</literal> variables must be assigned in
            the function as well as <literal>varargout(i)</literal>.
        </para>
        <para>
            <literal>nargout</literal> returns the actual total number of output arguments.
        </para>
        <note>
            <literal>varargout</literal> is by default initialized to <literal>list()</literal>.
        </note>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
function varargout = exampl()
    varargout = list(1,2,3,4)
endfunction

x = exampl()
[x, y]    = exampl()
[x, y, z] = exampl()

function [a,b,varargout]=exampl1()
    a = 'first'
    b = 'second'
    varargout = list(1,2,3,4)
endfunction

exampl1()
[a, b]  = exampl1()
[a,b,c] = exampl1()
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="nargout">nargout</link>
            </member>
            <member>
                <link linkend="function">function</link>
            </member>
            <member>
                <link linkend="list">list</link>
            </member>
            <member>
                <link linkend="varargin">varargin</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revdescription>
                    varargout is now initialized to list() by default.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
