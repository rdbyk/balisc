<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
          xml:lang="en" xml:id="funcprot">
    <refnamediv>
        <refname>funcprot</refname>
        <refpurpose>function protection mode</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            previousprot = funcprot(prot)
            prot = funcprot()
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>prot</term>
                <listitem>
                    <para>an integer with possible values 0, 1, 2</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>previousprot</term>
                <listitem>
                    <para>an integer with possible values 0, 1, 2 returns previous value</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Scilab functions are variables. The function protection mode <function>funcprot</function> defines the behaviour, whenever
            the redefinition of a function is detected.
        </para>
        <para>
            Please note, that only redefinitions in the current scope are detected, i.e.
            possible shadowing of function definitions remain undetected.
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    If <code>prot == 0</code> nothing is done.
                </para>
            </listitem>
            <listitem>
                <para>
                    If <code>prot == 1</code> a warning is issued (default).
                </para>
            </listitem>
            <listitem>
                <para>
                    If <code>prot == 2</code> an error is raised.
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
previousprot = funcprot(1)
deff('x = foo(a)','x = a;')
deff('x = foo(a)','x = a + 1;')
foo = 33
funcprot(0)
deff('x = foo(a)', 'x = a;')
deff('x = foo(a)', 'x = a + 1;')
foo = 33
funcprot(previousprot)
]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="protect">protect</link>
            </member>
            <member>
                <link linkend="warning">warning</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.4.0</revnumber>
                <revremark>Previous value is returned as output argument when setting a new value.</revremark>
            </revision>
            <revision>
                <revnumber>Balisc 1</revnumber>
                <revremark>Pointed out limitations wrt to the detection of function redefinitions.</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
