cd TMPDIR;
mkdir("lib1");
mputl(["function ret = lib_test";"  ret= ""lib1""";"endfunction"], "lib1/lib_test.sci");
genlib("lib1lib","lib1",%f,%t);
-- Creation of [lib1lib] (Macros) --
genlib: Processing file: lib_test.sci
assert_checkequal(lib_test(), "lib1");
clear lib1lib lib_test;
mkdir("lib2");
mputl(["function ret = lib_test";"  ret= ""lib2""";"endfunction"], "lib2/lib_test.sci");
genlib("lib2lib","lib2",%f,%t);
-- Creation of [lib2lib] (Macros) --
genlib: Processing file: lib_test.sci
assert_checkequal(lib_test(), "lib2");
clear lib2lib lib_test;
lib1lib = lib("lib1");
assert_checkequal(lib_test(), "lib1");
clear lib1lib lib_test;
lib2lib = lib("lib2");
assert_checkequal(lib_test(), "lib2");
clear lib2lib lib_test
lib1lib = lib("lib1");
assert_checkequal(lib1lib.lib_test(), "lib1");
lib2lib = lib("lib2");
assert_checkequal(lib2lib.lib_test(), "lib2");
m = mgetl("SCI/modules/ast/tests/unit_tests/test_macro.sci");
mkdir("test");
mputl(m, "test/test_macro.sci");
genlib("testlib","test",%f,%t);
-- Creation of [testlib] (Macros) --
genlib: Processing file: test_macro.sci
assert_checkequal(test_macro(4), 16);
assert_checkequal(exists("internal_macro"), 0);
assert_checkequal(exists("x"), 0);
internal_macro = 1;x = 18;
assert_checkequal(test_macro(5), 20);
assert_checkequal(internal_macro, 1);
assert_checkequal(x, 18);
mkdir("mylib");
mputl("function mylib(), endfunction", "mylib/mylib.sci");
genlib("myliblib", "mylib",%f,%t);
-- Creation of [myliblib] (Macros) --
genlib: Processing file: mylib.sci
function resumeLib()
    l=lib("mylib");
    l=return(l);
endfunction
resumeLib();
resumeLib();
