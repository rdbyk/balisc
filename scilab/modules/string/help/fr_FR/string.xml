<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA -
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2019 - Samuel GOUGEON
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:id="string" xml:lang="fr">
    <refnamediv>
        <refname>string</refname>
        <refpurpose>conversion en chaîne de caractères</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis>
            text = string(x)
            [out, in, text] = string(SciFun)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Paramètres</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>Booléen, complexe, réel, entier, polynôme matrice,
                        bibliotheque ou fonction
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>SciFun</term>
                <listitem>
                    <para>
                        function en langage Scilab (identifiant de type 13, non son nom comme texte).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>Convertit une matrice en matrice de chaînes de caractères.</para>
        <para>
            Si <varname>SciFun</varname> est une fonction,
            <literal>[out, in, text] = string(SciFun)</literal>
            retourne 3 vecteurs de chaînes de caractères :
            <itemizedlist>
                <listitem>
                    <varname>out</varname> est le vecteur des noms de ses variables de sortie,
                </listitem>
                <listitem>
                    <varname>in</varname> est le vecteur des noms de ses variables d'entrée, et
                </listitem>
                <listitem>
                    <varname>text</varname> est le vecteur colonne des lignes de code source de la fonction.
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Si <varname>x</varname> est une variable bibliotheque
            <literal>lib</literal>, text est un vecteur colonne de chaînes de
            caractères. Le premier élément contient le chemin de la bibliothèque et
            l'autre élément le nom des fonctions qui sont définies dans cette
            bibliothèque.
        </para>
        <warning>
            pour les types Booléen, complexe, réel, entier, polynôme, fraction rationnelle, le
            format texte des nombres et coefficients produits par <literal>string</literal>
            est déterminé par la fonction <link linkend="format">format</link> (voir exemples).
        </warning>
        <para>
            Notez que string([]) renvoie [] (inchangée).
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[
string(rand(2, 2))

deff("y = mymacro(x)", "y = x + 1")
[out, in, text] = string(mymacro)
x = 123.356;
disp("Result is " + string(x));

disp("/" + string(~%t) + "/");
disp("/" + string(%i+1) + "/");
disp("/" + string(int16(-123)) + "/");
disp("/" + string(1 + %s + %s^3) + "/");

string(corelib)

v = format();
disp(string(%pi))
format(24);
disp(string(%pi))
format(v(2))

string(1:4:$)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="format">format</link>
            </member>
            <member>
                <link linkend="sci2exp">sci2exp</link>
            </member>
            <member>
                <link linkend="msprintf">msprintf</link>
            </member>
            <member>
                <link linkend="tree2code">tree2code</link>
            </member>
            <member>
                <link linkend="pol2str">pol2str</link>
            </member>
            <member>
                <link linkend="execstr">execstr</link>
            </member>
            <member>
                <link linkend="evstr">evstr</link>
            </member>
            <member>
                <link linkend="strtod">strtod</link>
            </member>
            <member>
                <link linkend="csvTextScan">csvTextScan</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>5.4.0</revnumber>
                <revremark>
                    implicitlist typeof input accepted.
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
