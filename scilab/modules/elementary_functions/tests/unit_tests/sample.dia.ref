fname = "sample";
err_msg_glob = msprintf(_("%s: Wrong number of input arguments: %d to %d expected.\n"), fname, 2, 3);
err_msg_orient = msprintf(gettext("%s: Wrong value for input argument #%d: ''%s'', ''%s'', ''%s'', %d or %d expected.\n"), fname, 3, "*", "r", "c", 1, 2);
n = 100;
X = 1:10;
orient = "*";
func_str = "sample(n)";
grand("setsd",0);
assert_checkerror(func_str, err_msg_glob);
n = 100;
X = 1:10;
orient = "5";
func_str = "sample(n, X, orient)";
grand("setsd",0);
assert_checkerror(func_str, err_msg_orient);
n = 100;
X = 1:10;
grand("setsd", 0);
samples = sample(n, X);
grand("setsd", 0);
samples_star = sample(n, X, "*");
assert_checkequal(samples, samples_star);
X = X';
grand("setsd", 0);
samples_transposed = sample(n, X);
assert_checkequal(samples, samples_transposed);
n = 100;
X = [1 2 3; 4 5 6];
grand("setsd", 0);
samples_r_n = sample(n, X, "r");
grand("setsd", 0);
samples_one_n = sample(n, X, 1);
assert_checkequal(samples_r_n, samples_one_n);
n = 100;
X = [1 2 3; 4 5 6];
grand("setsd", 0);
samples_c_n = sample(n, X, "c");
grand("setsd", 0);
samples_two_n = sample(n, X, 2);
assert_checkequal(samples_c_n, samples_two_n);
