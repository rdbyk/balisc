s=zeros(100,1);
s(4)=1;
S=fft(s,-1);
CC=cos(2*%pi*[0:99]'*3/100);
CS=-sin(2*%pi*[0:99]'*3/100);
assert_checkalmostequal(real(S), CC, [], 10*%eps);
fft([1;0;0],-1);
rs=fft(real(S),-1);
is=fft(imag(S),-1);
assert_checkalmostequal(real(rs), real(fft(CC,-1)), [], 100*%eps);
rs2=fft(real(S),-1,dim=100,incr=1);
assert_checkequal(real(rs), real(rs2));
assert_checkalmostequal(imag(is), imag(fft(CS,-1)), [], 100*%eps);
fft(eye(100,1),-1);
rs=fft(real(S),-1);
is=fft(imag(S),-1);
assert_checkalmostequal(real(rs), real(fft(CC,-1)), [], 100*%eps);
rs2=fft(real(S),-1,dim=100,incr=1);
assert_checkequal(real(rs), real(rs2));
assert_checkalmostequal(imag(is), imag(fft(CS,-1)), [], 100*%eps);
rs=fft(real(S),-1);
is=fft(imag(S),-1);
assert_checkalmostequal(real(rs), real(fft(CC,-1)), [], 100*%eps);
rs2=fft(real(S),-1,dim=100,incr=1);
assert_checkequal(real(rs), real(rs2));
assert_checkalmostequal(imag(is), imag(fft(CS,-1)), [], 100*%eps);
t=rand(1,100);
r=convol(eye(50,1)',t);
assert_checkalmostequal(t(1:10),r(1:10), [], 100*%eps);
