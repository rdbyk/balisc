non_real_time = msprintf(_("%s: Wrong type for argument #%d: Real matrix expected.\n"),"soundsec",1);
non_real_freq = msprintf(_("%s: Wrong type for argument #%d: Real matrix expected.\n"),"soundsec",2);
non_positive_time=msprintf(_("%s: Wrong value for input argument #%d: Must be >= %d.\n"),"soundsec",1,0);
non_positive_freq=msprintf(_("%s: Wrong value for input argument #%d: Must be >= %d.\n"),"soundsec",2,0);
non_scalar_time=msprintf(_("%s: Wrong size for input argument #%d: %d-by-%d matrix expected.\n"),"soundsec",1,1,1);
non_scalar_freq=msprintf(_("%s: Wrong size for input argument #%d: %d-by-%d matrix expected.\n"),"soundsec",2,1,1);
assert_checkerror("soundsec(""test"",1)",non_real_time);
assert_checkerror("soundsec(%i,1)",non_real_time);
assert_checkerror("soundsec(1,""test"")",non_real_freq);
assert_checkerror("soundsec(1,%i)",non_real_freq);
assert_checkerror("soundsec(0:10,1)",non_scalar_time);
assert_checkerror("soundsec(1,0:10)",non_scalar_freq);
assert_checkerror("soundsec(-1,10)",non_positive_time);
assert_checkerror("soundsec(1,-1)",non_positive_freq);
assert_checkequal(soundsec(0, 100), []);
assert_checkequal(soundsec(100, 0), []);
assert_checkalmostequal( soundsec(10/22050), [0:9]./22050);
samples_t = soundsec(1, 10);
assert_checkalmostequal(samples_t, (0:9)/10);
samples_t = soundsec(0.11, 100);
assert_checkalmostequal(samples_t, (0:10)/100);
samples_t = soundsec(1,5.2);
assert_checkalmostequal(samples_t, (0:5)/5.2);
samples_t = soundsec(1.2324,50.75);
assert_checkalmostequal(samples_t, (0:62)/50.75);
