<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2019 - Samuel GOUGEON
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:id="bessel" xml:lang="pt">
    <refnamediv xml:id="besseli">
        <refname>besseli</refname>
        <refpurpose>
            funções modificadas de Bessel do primeiro tipo (I<subscript>α</subscript>).
        </refpurpose>
    </refnamediv>
    <refnamediv xml:id="besselj">
        <refname>besselj</refname>
        <refpurpose>
            funções de Bessel do primeiro tipo (J<subscript>α</subscript>).
        </refpurpose>
    </refnamediv>
    <refnamediv xml:id="besselk">
        <refname>besselk</refname>
        <refpurpose>
            funções modificadas de Bessel do segundo tipo (K<subscript>α</subscript>).
        </refpurpose>
    </refnamediv>
    <refnamediv xml:id="bessely">
        <refname>bessely</refname>
        <refpurpose>
            funções de Bessel do segundo tipo (Y<subscript>α</subscript>).
        </refpurpose>
    </refnamediv>
    <refnamediv xml:id="besselh">
        <refname>besselh</refname>
        <refpurpose>funções de Bessel do terceiro tipo (também conhecidas como funções de Hankel)
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Seqüência de Chamamento</title>
        <synopsis>
            y = besseli(alpha, x [,ice])
            y = besselj(alpha, x [,ice])
            y = besselk(alpha, x [,ice])
            y = bessely(alpha, x [,ice])
            y = besselh(alpha, x)
            y = besselh(alpha, K, x [,ice])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parâmetros</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>vetor de reais ou complexos</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>alpha</term>
                <listitem>
                    <para>vetor de reais </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ice</term>
                <listitem>
                    <para>flag (sinalizador) inteiro, com valor padrão 0 </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>K</term>
                <listitem>
                    <para>inteiro, com valores possíveis 1 ou 2, a função do tipo de
                        Hankel.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <itemizedlist>
            <listitem>
                <para>
                    <literal>besseli(alpha,x)</literal> computa as funções de Bessel
                    modificadas do primeiro tipo (I<subscript>α</subscript>), para ordem real
                    <varname>alpha</varname> e argumento <varname>x</varname>.
                    <literal>besseli(alpha,x,1)</literal> computa
                    <literal>besseli(alpha,x).*exp(-abs(real(x)))</literal>.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>besselj(alpha,x)</literal> computa as funções de Bessel
                    do primeiro tipo (J<subscript>α</subscript>), para ordem real
                    <varname>alpha</varname> e argumento <varname>x</varname>.
                    <literal>besselj(alpha,x,1)</literal> computa
                    <literal>besselj(alpha,x).*exp(-abs(imag(x)))</literal>.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>besselk(alpha,x)</literal> computa as funções de Bessel
                    modificadas do segundo tipo (K<subscript>α</subscript>), para ordem real
                    <varname>alpha</varname> e argumento <varname>x</varname>.
                    <literal>besselk(alpha,x,1)</literal> computa
                    <literal>besselk(alpha,x).*exp(x)</literal>.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>bessely(alpha,x)</literal> computa as funções de Bessel do segundo
                    tipo (Y<subscript>α</subscript>), para ordem real <varname>alpha</varname>
                    e argumento <varname>x</varname>.
                    <literal>bessely(alpha,x,1)</literal> computa
                    <literal>bessely(alpha,x).*exp(-abs(imag(x)))</literal>.
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>besselh(alpha [,K] ,x)</literal> computa as funções de
                    Bessel do terceiro tipo (função de Hankel H1 ou H2, dependendo do
                    <literal>K</literal>), para ordem real <varname>alpha</varname> e
                    argumentot <varname>x</varname>. Se omitido, <literal>K</literal> é
                    suposto como sendo 1. <literal>besselh(alpha,1,x,1)</literal> computa
                    <literal>besselh(alpha,1,x).*exp(-%i*x)</literal> e
                    <literal>besselh(alpha,2,x,1)</literal> computa
                    <literal>besselh(alpha,2,x).*exp(%i*x)</literal>
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Observações </title>
        <para>
            Se <varname>alpha</varname> e <varname>x</varname> são arrays de
            mesmo tamanho, o resultado <literal>y</literal> também terá este tamanho.
            Se uma entrada é um escalar, ela é expandida para o tamanho da outra
            entrada. Se uma entrada é um vetor linha e a outra é um vetor coluna, o
            resultado <literal>y</literal> é um table 2-dimensional ("tabela") de
            valores de funções.
        </para>
        <para>
            As funções de Bessel Y<subscript>α</subscript> e J<subscript>α</subscript>
            são duas soluções independentes da equação diferencial de Bessel:
        </para>
        <latex style="display" alt="x^2.(d^2y/d^2x) + x.dy/dx + (x^2 - alpha^2).y = 0,  alpha ≥ 0">
            {x^2} \cdot {{d^2 y} \over {dx^2}} + x \cdot {{dy} \over {dx}} + (x^2 - \alpha^2) \cdot y = 0,
            \quad\alpha\ge0
        </latex>
        <para>
            As funções modificadas de Bessel K<subscript>α</subscript> e I<subscript>α</subscript>
            são duas soluções independentes para a equação diferencial de Bessel :
        </para>
        <latex style="display" alt="x^2.(d^2y/d^2x) + x.dy/dx + (alpha^2 - x^2).y = 0,  alpha ≥ 0">
            {x^2} \cdot {{d^2 y} \over {dx^2}} + x \cdot {{dy} \over {dx}} + (\alpha^2 - x^2) \cdot y = 0,
            \quad\alpha\ge0
        </latex>
        <para>
            As funções de Hankel de primeiro e segundo tipos
            H<superscript>2</superscript><subscript>α</subscript> e
            H<superscript>2</superscript><subscript>α</subscript>, são combinações
            lineares das funções de Bessel de primeiro e segundo tipos:
        </para>
        <latex style="display" alt="H^1_α(z) = J_α(z) + i \cdot Y_α(z)  \n
H^2_α(z) = J_α(z) - i \cdot Y_α(z)">
            H^1_{\alpha}(z) = J_{\alpha}(z) + i \cdot Y_{\alpha}(z) \\
            H^2_{\alpha}(z) = J_{\alpha}(z) - i \cdot Y_{\alpha}(z)
        </latex>
    </refsection>

    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[
//  Funções I de Bessel
// ==================
x = linspace(0.01,10,5000)';
clf()
subplot(2,1,1)
plot2d(x,besseli(0:4,x), style=2:6)
legend('I'+string(0:4),2);
xtitle("Algumas funções modificadas de Bessel do primeiro tipo")
subplot(2,1,2)
plot2d(x,besseli(0:4,x,1), style=2:6)
legend('I'+string(0:4),1);
xtitle("Algumas funções modificadas de Bessel do primeiro tipo escaladas")
 ]]></programlisting>
        <scilab:image>
            x = linspace(0.01,10,5000)';
            clf()
            subplot(2,1,1)
            plot2d(x,besseli(0:4,x), style=2:6)
            legend('I'+string(0:4),2);
            xtitle("Some modified Bessel functions of the first kind")
            subplot(2,1,2)
            plot2d(x,besseli(0:4,x,1), style=2:6)
            legend('I'+string(0:4),1);
            xtitle("Some modified scaled Bessel functions of the first kind")
        </scilab:image>
        <para/>
        <programlisting role="example"><![CDATA[

// Funções J de Bessel
// =================
x = linspace(0,40,5000)';
clf()
plot2d(x,besselj(0:4,x), style=2:6, leg="J0@J1@J2@J3@J4")
legend('I'+string(0:4),1);
xtitle("Algumas funções de Bessel do primeiro tipo")
 ]]></programlisting>
        <scilab:image>
            x = linspace(0,40,5000)';
            plot2d(x,besselj(0:4,x), style=2:6, leg="J0@J1@J2@J3@J4")
            legend('I'+string(0:4),1);
            xtitle("Some Bessel functions of the first kind")
        </scilab:image>

        <para/>
        <programlisting role="example"><![CDATA[
// Usando o fato de que J_(1/2)(x) = sqrt(2/(x pi)) sin(x)
// Para comparar o algoritmo de besselj(0.5,x) com uma fórmula mais direta
x = linspace(0.1,40,5000)';
y1 = besselj(0.5, x);
y2 = sqrt(2 ./(%pi*x)).*sin(x);
er = abs((y1-y2)./y2);
ind = find(er > 0 & y2 ~= 0);
clf()
subplot(2,1,1)
plot2d(x,y1,style=2)
xtitle("besselj(0.5,x)")
subplot(2,1,2)
plot2d(x(ind), er(ind), style=2, logflag="nl")
xtitle("Erro relativo entre as duas fórmulas para besselj(0.5,x)")
 ]]></programlisting>
        <scilab:image><![CDATA[
   x = linspace(0.1,40,5000)';
   y1 = besselj(0.5, x);
   y2 = sqrt(2 ./(%pi*x)).*sin(x);
   er = abs((y1-y2)./y2);
   ind = find(er > 0 & y2 ~= 0);
   clf()
   subplot(2,1,1)
   plot2d(x,y1,style=2)
   xtitle("besselj(0.5,x)")
   subplot(2,1,2)
   plot2d(x(ind), er(ind), style=2, logflag="nl")
   xtitle("relative error between 2 formulae for besselj(0.5,x)")
 ]]></scilab:image>

        <para/>
        <programlisting role="example"><![CDATA[
// Funções K de Bessel
// =================
x = linspace(0.01,10,5000)';
clf()
subplot(2,1,1)
plot2d(x,besselk(0:4,x), style=0:4, rect=[0,0,6,10])
legend('K'+string(0:4),1);
xtitle("Algumas funções modificadas de Bessel do segundo tipo")
subplot(2,1,2)
plot2d(x,besselk(0:4,x,1), style=0:4, rect=[0,0,6,10])
legend('K'+string(0:4),1);
xtitle("Algumas funções modificadas de Bessel do segundo tipo escaladas")
 ]]></programlisting>
        <scilab:image>
            x = linspace(0.01,10,5000)';
            clf()
            subplot(2,1,1)
            plot2d(x,besselk(0:4,x), style=0:4, rect=[0,0,6,10])
            legend('K'+string(0:4),1);
            xtitle("Some modified Bessel functions of the second kind")
            subplot(2,1,2)
            plot2d(x,besselk(0:4,x,1), style=0:4, rect=[0,0,6,10])
            legend('K'+string(0:4),1);
            xtitle("Some modified scaled Bessel functions of the second kind")
        </scilab:image>

        <para/>
        <programlisting role="example"><![CDATA[
// Funções Y de Bessel
// =================
x = linspace(0.1,40,5000)'; // funções Y de Bessel não possuem limite para x -> 0+
clf()
plot2d(x,bessely(0:4,x), style=0:4, rect=[0,-1.5,40,0.6])
legend('Y'+string(0:4),4);
xtitle("Algumas funções de Bessel do segundo tipo")
 ]]></programlisting>
        <scilab:image>
            x = linspace(0.1,40,5000)'; // Y Bessel functions are unbounded  for x -> 0+
            clf()
            plot2d(x,bessely(0:4,x), style=0:4, rect=[0,-1.5,40,0.6])
            legend('Y'+string(0:4),4);
            xtitle("Some Bessel functions of the second kind")
        </scilab:image>

        <para/>
        <programlisting role="example"><![CDATA[
// Funções H de Bessel
// =================
x=-4:0.025:2; y=-1.5:0.025:1.5;
[X,Y] = ndgrid(x,y);
H = besselh(0,1,X+%i*Y);
clf();f=gcf();
xset("fpf"," ")
f.color_map=jetcolormap(16);
contour2d(x,y,abs(H),0.2:0.2:3.2,strf="034",rect=[-4,-1.5,3,1.5])
legends(string(0.2:0.2:3.2),1:16,"ur")
xtitle("Curvas de nível de |H1(0,z)|")
 ]]></programlisting>
        <scilab:image>
            x=-4:0.025:2; y=-1.5:0.025:1.5;
            [X,Y] = ndgrid(x,y);
            H = besselh(0,1,X+%i*Y);
            clf();f=gcf();
            xset("fpf"," ")
            f.color_map=jetcolormap(16);
            contour2d(x,y,abs(H),0.2:0.2:3.2,strf="034",rect=[-4,-1.5,3,1.5])
            legends(string(0.2:0.2:3.2),1:16,"ur")
            xtitle("Level curves of |H1(0,z)|")
        </scilab:image>
    </refsection>
    <refsection>
        <title>Autores</title>
        <simplelist type="vert">
            <member>Amos, D. E., (SNLA)</member>
            <member>Daniel, S. L., (SNLA)</member>
            <member>Weston, M. K., (SNLA)</member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Função Usada</title>
        <para>Os códigos-fontes podem ser achados em SCI/modules/special_functions/src/fortran/slatec e SCI/modules/special_functions/src/fortran</para>
        <para>Slatec : dbesi.f, zbesi.f, dbesj.f, zbesj.f, dbesk.f, zbesk.f,
            dbesy.f, zbesy.f, zbesh.f
        </para>
        <para>Drivers para estender a área de definição (Serge Steer INRIA):
            dbesig.f, zbesig.f, dbesjg.f, zbesjg.f, dbeskg.f, zbeskg.f, dbesyg.f,
            zbesyg.f, zbeshg.f
        </para>
    </refsection>
</refentry>
