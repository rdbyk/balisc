// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2011 - INRIA - Serge Steer
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// <-- CLI SHELL MODE -->
// <-- Non-regression test for bug 8874 -->
//
// <-- Bugzilla URL -->
// http://bugzilla.scilab.org/show_bug.cgi?id=8874
//
// <-- ENGLISH IMPOSED -->
// <-- Short Description -->
// Wrong display of complex numbers with Inf or Nan real or Imaginary
// parts
setlanguage("en_US");
A=[complex(-1,%inf),complex(1,%nan),complex(%inf,%nan),complex(%nan,%nan);
1                2               3                  4];
As=sparse(A);
P=poly(A(1,:),"s","c");
format("v")
// Check string
assert_checkequal(string(complex(0,%inf)),"%i*Inf");
assert_checkequal(string(complex(1,%inf)),"1+%i*Inf");
assert_checkequal(string(complex(-1,%inf)),"-1+%i*Inf");
assert_checkequal(string(complex(1,%nan)),"1+%i*Nan");
assert_checkequal(string(complex(%inf,%nan)),"Inf+%i*Nan");
assert_checkequal(string(complex(-%inf,%nan)),"-Inf+%i*Nan");
assert_checkequal(string(complex(%nan,%nan)),"Nan+%i*Nan");
assert_checkequal(string(A),["-1+%i*Inf","1+%i*Nan","Inf+%i*Nan","Nan+%i*Nan";"1","2","3","4"]);
//Check display
complex(0,%inf)
 ans  =
   0. + Infi
complex(1,%inf)
 ans  =
   1. + Infi
complex(-1,%inf)
 ans  =
  -1. + Infi
complex(1,%nan)
 ans  =
   1. + Nani
complex(%inf,%nan)
 ans  =
   Inf + Nani
complex(-%inf,%nan)
 ans  =
  -Inf + Nani
complex(%nan,%nan)
 ans  =
   Nan + Nani
A
 A  = 
  -1. + Infi   1. + Nani   Inf + Nani   Nan + Nani
   1. + 0.i    2. + 0.i    3.  + 0.i    4.  + 0.i 
As
 As  = 
(  2,  4) sparse matrix
(  1,  1)	 -1. + Infi
(  1,  2)	  1. + Nani
(  1,  3)	  Inf + Nani
(  1,  4)	  Nan + Nani
(  2,  1)	  1. + 0.i
(  2,  2)	  2. + 0.i
(  2,  3)	  3. + 0.i
(  2,  4)	  4. + 0.i
P
 P  = 
  -1+Infi +(1+Nani)s +(Inf+Nani)s² -(Nan+Nani)s³
format("e")
// Check string
assert_checkequal(string(complex(0,%inf)),"%i*Inf");
assert_checkequal(string(complex(1,%inf)),"1.000D+00+%i*Inf");
assert_checkequal(string(complex(-1,%inf)),"-1.000D+00+%i*Inf");
assert_checkequal(string(complex(1,%nan)),"1.000D+00+%i*Nan");
assert_checkequal(string(complex(%inf,%nan)),"Inf+%i*Nan");
assert_checkequal(string(complex(-%inf,%nan)),"-Inf+%i*Nan");
assert_checkequal(string(complex(%nan,%nan)),"Nan+%i*Nan");
assert_checkequal(string(A),["-1.000D+00+%i*Inf","1.000D+00+%i*Nan","Inf+%i*Nan","Nan+%i*Nan";
"1.000D+00","2.000D+00","3.000D+00","4.000D+00"]);
//Check display
complex(0,%inf)
 ans  =
   0.000D+00 + Infi
complex(1,%inf)
 ans  =
   1.000D+00 + Infi
complex(-1,%inf)
 ans  =
  -1.000D+00 + Infi
complex(1,%nan)
 ans  =
   1.000D+00 + Nani
complex(%inf,%nan)
 ans  =
   Inf + Nani
complex(-%inf,%nan)
 ans  =
  -Inf + Nani
complex(%nan,%nan)
 ans  =
   Nan + Nani
A
 A  = 
         column 1 to 2
  -1.000D+00 + Infi         1.000D+00 + Nani      
   1.000D+00 + 0.000D+00i   2.000D+00 + 0.000D+00i
         column 3 to 4
   Inf       + Nani         Nan       + Nani      
   3.000D+00 + 0.000D+00i   4.000D+00 + 0.000D+00i
As
 As  = 
(  2,  4) sparse matrix
(  1,  1)	 -1.000D+00 + Infi
(  1,  2)	  1.000D+00 + Nani
(  1,  3)	  Inf + Nani
(  1,  4)	  Nan + Nani
(  2,  1)	  1.000D+00 + 0.000D+00i
(  2,  2)	  2.000D+00 + 0.000D+00i
(  2,  3)	  3.000D+00 + 0.000D+00i
(  2,  4)	  4.000D+00 + 0.000D+00i
P
 P  = 
  -1.000D+00+Infi +(1.000D+00+Nani)s +(Inf+Nani)s² -(Nan+Nani)s³
