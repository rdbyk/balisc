# Spanish translation for scilab
# Copyright (c) 2008 Rosetta Contributors and Canonical Ltd 2008
# This file is distributed under the same license as the scilab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: scilab\n"
"Report-Msgid-Bugs-To: <localization@lists.scilab.org>\n"
"POT-Creation-Date: 2013-04-16 17:44+0100\n"
"PO-Revision-Date: 2013-05-17 22:18+0000\n"
"Last-Translator: Scilab.team <Unknown>\n"
"Language-Team: Spanish <es@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Launchpad (build 18544)\n"
"Language: es\n"

#, c-format
msgid "%s: Wrong size for input arguments: Same sizes expected.\n"
msgstr ""
"%s: Tamaño incorrecto de los argumentos de entrada: Se los esperaba del "
"mismo tamaño.\n"

#, c-format
msgid ""
"%s: Wrong value for input argument #%d: not a valid reference to Cholesky "
"factors.\n"
msgstr ""
"%s: Valor incorrecto del argumento de entrada #%d: No es una referencia "
"válida a los factores de Cholesky.\n"

#, c-format
msgid ""
"%s: Wrong value for input argument #%d: Must be symmetric positive definite "
"matrix."
msgstr ""
"%s: Valor incorrecto del argumento de entrada #%d: Debe ser una matriz "
"simétrica definida positiva."

#, c-format
msgid "%s: No more memory.\n"
msgstr "%s: No hay más memoria.\n"

#, c-format
msgid "%s: An error occurred: %s\n"
msgstr "%s: Ha ocurrido un error: %s\n"

msgid "factorization"
msgstr "factorización"

#, c-format
msgid ""
"%s: Wrong value for input argument #%d: Must be a valid reference to a "
"Cholesky factorization"
msgstr ""

#, c-format
msgid "%s: Memory allocation error.\n"
msgstr ""

#, c-format
msgid ""
"%s: Wrong value for input argument #%d: not a valid reference to Cholesky "
"factors"
msgstr ""
"%s: Valor incorrecto del argumento de entrada #%d: No es una referencia "
"válida a factores de Cholesky"

#, c-format
msgid "%s: Wrong size for input argument #%d.\n"
msgstr "%s: Tamaño incorrecto del argumento de entrada #%d.\n"

#, c-format
msgid ""
"%s: Wrong type for input argument #%d: not compatible with the Cholesky "
"factorization.\n"
msgstr ""

#, c-format
msgid ""
"%s: Wrong size for input argument #%d: not compatible with the Cholesky "
"factorization.\n"
msgstr ""

#, c-format
msgid "%s: not enough memory.\n"
msgstr "%s: No hay suficiente memoria.\n"

#, c-format
msgid "%s: Wrong type for input argument #%d: A pointer expected.\n"
msgstr ""

#, c-format
msgid ""
"%s: Wrong value for input argument #%d: Must be a valid reference to (umf) "
"LU factors.\n"
msgstr ""
"%s: Valor incorrecto del argumento de entrada #%d: Debe ser una referencia "
"válida a los factores (umf) LU.\n"

#, c-format
msgid "%s: Wrong type for input argument #%d: A sparse matrix expected.\n"
msgstr ""

#, c-format
msgid "%s: An error occurred: %s: %s\n"
msgstr "%s: Ha ocurrido un error: %s: %s\n"

msgid "symbolic factorization"
msgstr "factorización simbólica"

msgid "The (square) matrix appears to be singular."
msgstr "La matriz (cuadrada) parece ser singular."

msgid "Warning"
msgstr "Advertencia"

msgid "no place to store the LU pointer in ListNumeric."
msgstr "no hay lugar para almacenar el puntero LU en ListNumeric."

#, c-format
msgid "%s: An error occurred: %s.\n"
msgstr "%s: Ha ocurrido un error: %s.\n"

msgid "This is not a factorization of a square matrix"
msgstr ""

msgid "This is a factorization of a singular matrix"
msgstr ""

#, c-format
msgid ""
"%s: Wrong type for input argument #%d: A real or complex column vector or "
"matrix expected.\n"
msgstr ""

#, c-format
msgid "%s: Wrong input argument #%d: '%s' or '%s' expected.\n"
msgstr "%s: Argumento de entrada incorrecto #%d: Se esperaba '%s' o '%s'.\n"

#, c-format
msgid "%s: Wrong size for input argument #%d: %s.\n"
msgstr "%s: Tamaño incorrecto del argumento de entrada #%d: %s.\n"

msgid "Matrix is not compatible with the given LU factors"
msgstr "La matriz no es compatible con los factores LU dados."

#, c-format
msgid "%s: Wrong type for input argument #%d: string expected.\n"
msgstr ""

#, c-format
msgid "%s: Wrong type for input argument #%d: A matrix expected.\n"
msgstr ""

msgid "numeric factorization"
msgstr "factorización numérica"

msgid "singular matrix"
msgstr "matriz singular"

msgid "not enough memory"
msgstr "no hay suficiente memoria"

msgid "internal error"
msgstr "error interno"

msgid "invalid matrix"
msgstr "matriz inválida"

msgid "GENMMD ordering only works on symmetric matrices.\n"
msgstr "GENMMD solo funciona en matrices simétricas.\n"

msgid "The lower part of the matrix must be represented.\n"
msgstr "La parte inferior de la matriz debe ser representada.\n"

#, c-format
msgid "%s: No more memory (n=%d, nnz=%d).\n"
msgstr "%s: No hay mas memoria (n=%d, nnz=%d).\n"

msgid "    CC^T Factorization: Matrix is not positive definite.\n"
msgstr "    Factorización CC^T: La matriz no es definida positiva.\n"

#, c-format
msgid "                        nonpositive pivot in column %d\n"
msgstr "                        pivoteo no positivo en la columna %d\n"

msgid "Scilab UMFPACK module not installed.\n"
msgstr "El módulo UMFPACK de Scilab no está instalado.\n"

msgid ""
"A small test for the condestsp function: condestsp gives an estimate of\n"
" the condition number K1 in 1-norm of a real sparse matrix A:"
msgstr ""

msgid ""
"     without explicitly computing the inverse of A. condestsp uses a "
"factorization given by\n"
" umf_lufact but if you have already computed this one it is recommended to "
"give the pointer to the factorization."
msgstr ""

msgid ""
"The test consists in forming small sparse matrices (so as to compute K1 "
"exactly with\n"
"norm(inv(full(A)),1)) whose values are chosen from the normal distribution."
msgstr ""

msgid ""
"\n"
"Press Return to continue...\n"
msgstr ""

msgid ""
"This test compares umfpack v3 and sparse v1.3 via their Scilab interface."
msgstr ""

msgid ""
"The test consists in loading Harwell-Boeing sparse matrices and solve linear "
"system with a random rhs."
msgstr ""

msgid "The matrices presented here come from the NIST server Matrix server:"
msgstr ""

msgid "Warning: tests 2 and 3 take much more time than the others."
msgstr ""

msgid ""
"Test 1: Jacobian of a nonlinear system of ordinary differential equations "
"(ODEs) modeling a laser"
msgstr ""

msgid "  Mean time and accuracy for umfpack (t1 and ||A*x-b||):"
msgstr ""

msgid "  Time and accuracy for sparse module (t2 and ||A*x-b||):"
msgstr ""

msgid "  Time comparison (t2/t1):"
msgstr ""

msgid "Test 2: Generalized eigenvalue problem Kx = (lambda)Mx"
msgstr ""

msgid "Test 3: Matrices generated by the FIDAP Package"
msgstr ""

msgid "Test 4: Tokamak Matrices"
msgstr ""

msgid "Test 5: Acoustic scattering"
msgstr ""

msgid ""
"To load a sparse matrix stored in the Harwell-Boeing format in Scilab, you "
"may use the function ReadHBSparse."
msgstr ""

msgid ""
"4 matrices will be loaded for the demo: they come from the University of "
"Florida Sparse Matrix Collection:"
msgstr ""

msgid "    maintained by Tim Davis, author of UMFPACK"
msgstr ""

msgid ""
"To see the pattern of non zeros elements, you may use the function "
"PlotSparse."
msgstr ""

msgid "Here we will display the 4 matrices"
msgstr ""

msgid "Now, using umfpack to solve some linear systems:"
msgstr ""

msgid "-> to create a rhs"
msgstr ""

msgid "-> to solve A1*x1 = b1"
msgstr ""

msgid "-> norm of the residual"
msgstr ""

msgid "this is done for the 4 matrices A1, A2, A3 and A4."
msgstr ""

msgid "A1 ("
msgstr ""

#, c-format
msgid "     norm of the residual = "
msgstr ""

#, c-format
msgid "     computing time       = "
msgstr ""

msgid "A2 ("
msgstr ""

msgid "A3 ("
msgstr ""

msgid "A4 ("
msgstr ""

msgid "Now we will see how to use the lu factors:"
msgstr ""

msgid "  1/ lu factors of a sparse matrix A are obtained through:"
msgstr ""

#, c-format
msgid ""
"     lup = umf_lufact(A)\n"
"     lup is a pointer to the lu factors (the memory is outside scilab "
"space)\n"
msgstr ""

msgid "  2/ for solving a linear system A*x = b, use:"
msgstr ""

#, c-format
msgid ""
"     x = umf_lusolve(lup,b)\n"
"     or  x = umf_lusolve(lup,b,Ax=b,A)  to add an iterative refinement step\n"
msgstr ""

msgid "  3/ to solve A'*x=b you may use:"
msgstr ""

#, c-format
msgid ""
"     x = umf_lusolve(lup,b,Ax''=b)\n"
"     or  x = umf_lusolve(lup,b,Ax''=b,A)  to add an iterative refinement "
"step\n"
msgstr ""

msgid "  4/ you may also compute the 1-norm condition number quicky with:"
msgstr ""

#, c-format
msgid ""
"     K1 = condestsp(A,lup)\n"
"     K1 = condestsp(A) also works but in this case the lu factors are re-"
"computed inside\n"
msgstr ""

msgid ""
"  5/ if you don't need the lu factors anymore, it is recommended to free "
"them with:"
msgstr ""

#, c-format
msgid ""
"     umf_ludel(lup)\n"
"     if you have lost your pointer you may use umf_ludel() which frees all "
"the current umf lu factors\n"
msgstr ""

#, c-format
msgid "     norm of the residual    = "
msgstr ""

#, c-format
msgid "     norm of the residual     = "
msgstr ""

#, c-format
msgid "     same but with refinement = "
msgstr ""

msgid "Now we will see how to use the taucs snmf stuff on the matrix A2."
msgstr ""

msgid ""
"This is useful and recommended when your matrix is symmetric positive "
"definite (s.p.d.)."
msgstr ""

msgid ""
"  1/ the Cholesky factorization of a s.p.d. matrix A is obtained with:"
msgstr ""

#, c-format
msgid ""
"     Cp is a pointer to the Cholesky fact. (the memory is outside scilab "
"space)\n"
msgstr ""

msgid "  2/ for solving a linear system A*x = b then use:"
msgstr ""

#, c-format
msgid "     x = taucs_chsolve(Cp,b)\n"
msgstr ""

msgid "  3/ for the same thing with one refinement step, use:"
msgstr ""

#, c-format
msgid "     xr = taucs_chsolve(Cp,b,A)\n"
msgstr ""

msgid "  4/ you may also compute the 2-norm condition number with:"
msgstr ""

#, c-format
msgid "     [K2, lm, vm, lM, vM] = cond2sp(A, Cp [, itermax, eps, verb])\n"
msgstr ""

msgid ""
"  5/ if you don't need the Cholesky factorization anymore, it is recommended "
"to free it with taucs_chdel(Cp)"
msgstr ""

#, c-format
msgid ""
"     if you have lost your pointer you may use taucs_chdel() which frees "
"memory for all the current Cholesky factorizations.\n"
msgstr ""

msgid " with umfpack:"
msgstr ""

msgid " with the taucs snmf Cholesky solver:"
msgstr ""

msgid "UMFPACK"
msgstr ""

msgid "Sparse Matrices"
msgstr ""

msgid "Harwell-Boeing"
msgstr ""

msgid "condestsp"
msgstr ""

#, c-format
msgid "%s: Wrong number of input argument(s).\n"
msgstr "%s: Número incorrecto de argumento(s) de entrada.\n"

#, c-format
msgid "%s: Wrong type for input argument #%d: sparse matrix expected.\n"
msgstr ""
"%s: Tipo incorrecto del argumento de entrada #%d: se esperaba una matriz "
"dispersa.\n"

#, c-format
msgid "%s: Wrong type for input argument #%d: String expected.\n"
msgstr ""
"%s: Tipo incorrecto del argumento de entrada #%d: Se esperaba un string.\n"

msgid "Choose a sparse matrix"
msgstr "Seleccione una matriz dispersa"

msgid "   then click on OK   "
msgstr "   después haga click en OK   "

#, c-format
msgid "%s: Wrong number of input argument(s): At least %d expected.\n"
msgstr ""
"%s: Número incorrecto de argumentos de entrada: Se esperaban al menos %d.\n"

#, c-format
msgid "%s: The file contains a rhs but it will not be read !"
msgstr "%s: El archivo contiene una RHS pero no puede ser leído!"

#, c-format
msgid "%s: currently don't read unassembled (elemental) sparse matrix."
msgstr ""
"%s: actualmente no se puede leer una matriz dispersa no ensamblada "
"(elemental)."

#, c-format
msgid "%s: No values for this matrix (only non zero pattern) : put some 1."
msgstr ""
"%s: No hay valores para esta matriz (solo patrón no cero) : coloque algunos "
"1."

msgid ""
"\n"
" approximate (lM,vM) with the iterative power method \n"
msgstr ""
"\n"
" aproximar (lM,vM) con el método iterativo de potencias \n"

msgid " ----------------------------------------------------- \n"
msgstr " ----------------------------------------------------- \n"

#, c-format
msgid " iteration %3d : lM = %e  \n"
msgstr " iteración %3d : lM = %e  \n"

#, c-format
msgid " Warning : for lM convergence at rtol = %e \n"
msgstr " Advertencia : para convergencia lM en rtol = %e \n"

#, c-format
msgid "           don't reached after %d iterations (got only %e) \n"
msgstr "           no se alcanzó tras %d iteraciones (solo %e) \n"

msgid ""
"\n"
" approximate (lm,vm) with the inverse iterative power method \n"
msgstr ""
"\n"
" aproximar (lm,vm) con el método iterativo de potencias inversas \n"

msgid " ------------------------------------------------------------\n"
msgstr " ------------------------------------------------------------\n"

#, c-format
msgid " iteration %3d : lm = %e  \n"
msgstr " iteración %3d : lm = %e  \n"

#, c-format
msgid " Warning : for lm convergence at rtol = %e \n"
msgstr " Advertencia : para convergencia lm en rtol = %e \n"

#, c-format
msgid "%s: Wrong number of input arguments: %d to %d expected.\n"
msgstr ""
"%s: Número incorrecto de argumentos de entrada: Se esperaban de %d a %d.\n"

#, c-format
msgid ""
"%s: Wrong type for input argument #%d: Square sparse matrix expected.\n"
msgstr ""
"%s: Tipo incorrecto del argumento de entrada #%d: Se esperaba una matriz "
"dispersa cuadrada.\n"

#, c-format
msgid ""
"%s: Wrong size for input argument #%d: Square sparse matrix expected.\n"
msgstr ""
"%s: Tamaño incorrecto del argumento de entrada #%d: Se esperaba una matriz "
"dispersa cuadrada.\n"

#, c-format
msgid "%s: The matrix and the LU factors have not the same dimension !\n"
msgstr "%s: La matriz y la factorización LU no tienen la misma dimensión !\n"

#, c-format
msgid "%s: Invalid type and/or size and/or value for the second arg.\n"
msgstr "%s: Tipo y/o tamaño y/o valor Invalido para el segundo argumento.\n"

msgid "how to use this stuff"
msgstr "como usar estas cosas"

msgid "display a speed comparison test"
msgstr "muestra un test de comparación de velocidad"

msgid "small tests for condestsp"
msgstr "Pequeños tests para condestsp"

msgid "Click to choose a demo"
msgstr "Click para elegir un demo"
