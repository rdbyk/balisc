<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2004-2007 - INRIA - Serge STEER
 * Copyright (C) 2004-2007 - INRIA - Vincent COUVERT
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2018 - Samuel GOUGEON
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
-->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
          xml:lang="en" xml:id="savematfile">
    <refnamediv>
        <refname>savematfile</refname>
        <refpurpose>saves some Scilab variables in a Matlab MAT-file (binary or ASCII)</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            savematfile('filename')
            savematfile('filename', varnames, ...)
            savematfile('filename', 'var1', 'var2', ...)
            savematfile filename var1 var2 ...
            savematfile('filename', '-struct', 's')
            savematfile('filename', '-struct', 's', 'f1', 'f2', ...)
            savematfile(..., format)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>filename</term>
                <listitem>
                    <para>character string containing the path+name of the file</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>varnames</term>
                <listitem>
                    <para>
                        vector of the names (text) of variables to save, like
                        <literal>["var1" "var2"..]</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"var1", "var2"...</term>
                <listitem>
                    <para>
                        character strings being the names of the variables to save.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>format</term>
                <listitem>
                    <para>data format to use</para>
                    <para>
                        <table border="0">
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-mat"</emphasis></td>
                                <td>: binary MAT-file (default)</td>
                            </tr>
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-v4"</emphasis></td>
                                <td>: A format that MATLAB Version 4 can open</td>
                            </tr>
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-v6"</emphasis></td>
                                <td>: A format that MATLAB Version 6 and earlier can open</td>
                            </tr>
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-v7"</emphasis></td>
                                <td>: A format that MATLAB Version 7 and earlier can open (default)</td>
                            </tr>
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-v7.3"</emphasis></td>
                                <td>: A format that MATLAB Version 7.3 and earlier can open</td>
                            </tr>
                            <tr valign="top">
                                <td align="right"><emphasis role="bold">"-ascii"</emphasis></td>
                                <td>: 8-bit ASCII format</td>
                            </tr>
                            <tr valign="top">
                                <td style="white-space:nowrap" align="right">
                                    <emphasis role="bold">"-ascii" "-double"</emphasis>
                                </td>
                                <td>: 16-bit ASCII format</td>
                            </tr>
                            <tr valign="top">
                                <td style="white-space:nowrap" align="right">
                                    <emphasis role="bold">"-ascii" "-tabs"</emphasis>
                                </td>
                                <td>: delimits with tabs</td>
                            </tr>
                            <tr valign="top">
                                <td style="white-space:nowrap" align="right">
                                    <emphasis role="bold">"-ascii" "-double" "-tabs"</emphasis>
                                </td>
                                <td>: 16-digit ASCII format, tab delimited</td>
                            </tr>
                        </table>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"-struct" "s"</term>
                <listitem>
                    <para>
                        saves all fields of the scalar structure s as individual variables within
                        the file filename.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"-struct" "s" "f1" "f2"</term>
                <listitem>
                    <para>
                        saves as individual variables only those structure fields specified
                        (s.f1, s.f2, ...).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Saves some Scilab variables in a Matlab MAT-file. The names of chosen variables may be
            provided as distinct input arguments, or through a vector of names. By default, all
            variables existing in the workspace are saved.
            The Scilab data types are converted into the Matlab equivalents.
        </para>
        <warning>
            <itemizedlist>
                <listitem>
                    <para>
                    <emphasis role="bold">Unsupported Scilab data types</emphasis>:
                    polynomials, rationals, lists, all tlists and mlists,
                    primitives, functions, libraries, graphics, implicit lists (like 2:$)
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">v4</emphasis>: For any hypermatrix <literal>h</literal>,
                    its pages are horizontally concatenated before saving the resulting matrix:
                    <literal>h = matrix(h, size(h,1), -1)</literal>.
                    </para>
                </listitem>
                <listitem>
                    <para>
                    <emphasis role="bold">ASCII</emphasis>:
                        <itemizedlist>
                            <listitem>
                                The imaginary part of complex numbers is ignored (dense and sparse).
                            </listitem>
                            <listitem>
                                Booleans are stored as 0.|1. (dense and sparse).
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </itemizedlist>
        </warning>
        <table border="1">
            <tr>
            <th>Data type</th>  <th>v4</th><th>v6</th><th>v7</th><th>v7.3</th><th>ASCII</th>
                <th>Comments</th></tr>
            <tr valign="top">
                <td>boolean</td><td>x</td><td>bug</td><td>bug</td><td>bug</td><td>x</td>
                <td><ulink url="http://bugzilla.scilab.org/15568">Bug 15568</ulink>
                </td>
            </tr>
            <tr valign="top">
                <td>integer</td><td>x</td><td>X</td><td>X</td><td>X</td><td>no</td>
                <td>int8 are stored as uint8 if they are all > 0, or as int16 otherwise.<table/>
                    uint32 are stored as int32 if they are all &lt; 2<superscript>31</superscript>-1,
                    or as decimal numbers otherwise.<table/>
                    int64 and uint64 are stored as decimal numbers.
                </td>
            </tr>
            <tr valign="top">
                <td>real</td><td>x</td><td>X</td><td>X</td><td>X</td><td>x</td>
                <td></td>
            </tr>
            <tr valign="top">
                <td>complex</td><td>x</td><td>X</td><td>X</td><td>X</td><td>x</td>
                <td>ASCII: imaginary part ignored.</td>
            </tr>
            <tr valign="top">
                <td>sparse</td>
                    <td>x</td><td>x</td> <td>x</td> <td>x</td> <td>x</td>
                <td>Octave 4.4 loads correctly any real or complex sparse array saved from Scilab 6.0.<table/>
                    But loadmatfile()
                    <ulink url="http://bugzilla.scilab.org/15731">crashes Scilab</ulink> for
                    any sparse saved with -v4, and any complex sparse saved with -v6 -v7 or -v7.3.
                </td>
            </tr>
            <tr valign="top">
                <td>boolean sparse</td><td>x</td><td>no</td><td>no</td><td>no</td><td>x</td>
                <td>v4: Saved as sparse decimal 0|1. Well read from Octave 4.4</td>
            </tr>
            <tr valign="top">
                <td>Text</td><td>x</td><td></td><td></td><td></td><td>?</td>
                <td>v4: Any array is saved as a column of texts right-padded with spaces to all
                    have the same lengths.
                </td>
            </tr>
            <tr valign="top">
                <td>struct</td><td>no</td><td></td><td>x</td><td>X</td><td>no</td>
                <td></td>
            </tr>
            <tr valign="top">
                <td>cell</td><td>no</td><td>X</td><td>X</td><td>X</td><td>no</td>
                <td>Must not contain components of unsupported type or yielding errors/crashs</td>
            </tr>
        </table>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// Preparing some data:
H = rand(2,4,2);
N = complex(rand(2,3), rand(2,3));
I = int8(grand(4,10,"uin",-100,100));
T = ["foo" "bar"]';
S = struct("num",H, "imag",N, "text",T, "int",I);
C = {"Scilab", rand(2,3); H, S};

// Saving them in v7.3 format:
File = TMPDIR+"/savematfile_example.mat";
varnames = ['H','N','I','T','S','C'];
savematfile(File,'-v7.3', varnames);

clear C H I N S T
// Recovering data saved in Matlab format:
loadmatfile(File);

// Displaying them:
for v = varnames, execstr("mprintf(""\n %s ="",v); disp("+v+")"), end
 ]]></programlisting>
    <screen><![CDATA[
--> clear C H I N S T
--> // Recovering data saved in Matlab format:
--> loadmatfile(File);

--> // Displaying them:
--> for v = varnames, execstr("mprintf(""\n %s ="",v); disp("+v+")"), end

 H =
(:,:,1)
   0.2113249   0.0002211   0.6653811   0.8497452
   0.7560439   0.3303271   0.6283918   0.685731
(:,:,2)
   0.8782165   0.5608486   0.7263507   0.5442573
   0.068374    0.6623569   0.1985144   0.2320748

 N =
   0.2312237 + 0.2146008i   0.8833888 + 0.3616361i   0.3076091 + 0.5664249i
   0.2164633 + 0.312642i    0.6525135 + 0.2922267i   0.9329616 + 0.4826472i

 I =
 100  51 -52  92  17  34 -94 -30  36 -30
 -70 -72  -9 -19 -78 -15   1 -53 -23  91
  76 -83  93 -23  63 -80 -69  86  -7  57
  25  31  58 -64 -96  -9 -70  -4 -66 -34

 T =
!foo  !
!bar  !

 S =
  num: [2x4x2 constant]
  imag: [2x3 constant]
  text: [2x1 string]
  int: [4x10 int8]

 C =
  [  1x1 string  ]  [2x3 constant]
  [2x4x2 constant]  [1x1 struct  ]
]]></screen>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="loadmatfile">loadmatfile</link>
            </member>
            <member>
                <link linkend="matfile2sci">matfile2sci</link>
            </member>
            <member>
                <link linkend="mfile2sci">mfile2sci</link>
            </member>
            <member>
                <link linkend="save">save</link>
            </member>
            <member>
                <link linkend="load">load</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Bibliography</title>
        <para>This function has been developed following the "MAT-File Format"
            description:
            <literal>
                <ulink url="http://www.mathworks.com/access/helpdesk/help/pdf_doc/matlab/matfile_format.pdf">Mat-File Format</ulink>
            </literal>
        </para>
    </refsection>
</refentry>
