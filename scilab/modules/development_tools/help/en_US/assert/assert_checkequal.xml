<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2010 - 2011 - DIGITEO - Michael Baudin
 *
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="assert_checkequal" xml:lang="en">
    <refnamediv>
        <refname>assert_checkequal</refname>
        <refpurpose>Check that computed and expected are equal.</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            assert_checkequal ( computed , expected )
            flag = assert_checkequal ( computed , expected )
            [flag,errmsg] = assert_checkequal ( computed , expected )

        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term>computed:</term>
                <listitem>
                    <para> the computed result</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>expected :</term>
                <listitem>
                    <para> the expected result</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>flag :</term>
                <listitem>
                    <para> a 1-by-1 matrix of boolean, %t if computed is equal to expected, %f if not</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>errmsg :</term>
                <listitem>
                    <para> a 1-by-1 matrix of strings, the error message. If flag==%t, then errormsg=="". If flag==%f, then errmsg contains the error message.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Performs silently if <varname>computed</varname> and <varname>expected</varname> are equal.
        </para>
        <para>
            For complex numbers: We compare first the real parts. In case of equality, we compare
            the imaginary parts.
        </para>
        <para>
            Matching Nan values are always considered equal.
        </para>
        <para>
            <literal>1/%z</literal> and <literal>2/(2*%z)</literal> are not equal: For the time
            being, Scilab does not normalize equivalent rationals.
        </para>
        <para>
            In containers, matching <literal>void</literal> elements are considered equal.
        </para>
        <para>
            If the comparison shows that computed is equal to expected,
            <itemizedlist>
                <listitem>
                    <para>if the errmsg output variable is not used, an error is generated,</para>
                </listitem>
                <listitem>
                    <para>if the errmsg output variable is used, no error is generated.</para>
                </listitem>
            </itemizedlist>
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// Tests with success
assert_checkequal ( %T , %T );
flag = assert_checkequal ( list() , list() );
[flag , errmsg] = assert_checkequal ( [%T %F], [%T %F] );
assert_checkequal ( %nan , %nan );

// Tests with failure
assert_checkequal ( %F , %T );
flag = assert_checkequal ( %F , %T );
// No error produced :
[flag , errmsg] = assert_checkequal ( %F , %T )
assert_checkequal ( [1 2], [3 4] )
assert_checkequal ( 1 , [2 3] )
assert_checkequal ( 1 , "b" )

   ]]></programlisting>
    </refsection>
    <refsection>
        <title>Bibliography</title>
        <para>"Automated Software Testing for Matlab", Steven Eddins, 2009</para>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.4.0</revnumber>
                <revdescription>Function introduced
                </revdescription>
            </revision>
            <revision>
                <revnumber>6.1.0</revnumber>
                <revdescription>
                    <itemizedlist>
                      <listitem>
                          The comparison of two implicit lists, Scilab functions, Scilab libraries,
                          built-in functions or graphic handles is now always possible and properly
                          done.
                      </listitem>
                      <listitem>
                          In two lists, void and Nan elements are now supported, and matching ones
                          are considered as equal.
                      </listitem>
                      <listitem>
                          Nan are now supported in input sparse matrices and are considered as equal.
                      </listitem>
                      <listitem>
                          When the test fails while inputs are arrays, the message now indicates
                          the index of the first mismatching element.
                      </listitem>
                  </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <revnumber>6.1.1</revnumber>
                <revdescription>
                    Matching NaN or void elements in simple or nested containers are now considered equal.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
