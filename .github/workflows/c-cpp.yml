name: C/C++ CI

on: [push]

jobs:
  build:
    name: Ubuntu-20.04 Focal
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: |
        sudo apt update;
        sudo apt -y install bwidget;
        sudo apt -y install docbook;
        sudo apt -y install docbook-dsssl;
        sudo apt -y install docbook-utils;
        sudo apt -y install docbook-xml;
        sudo apt -y install docbook-xsl;
        sudo apt -y install fop;
        sudo apt -y install gettext;
        sudo apt -y install javahelp2;
        sudo apt -y install junit4;
        sudo apt -y install libactivation-java;
        sudo apt -y install libarpack2-dev;
        sudo apt -y install libavalon-framework-java;
        sudo apt -y install libbatik-java;
        sudo apt -y install libcobertura-java;
        sudo apt -y install libcurl4-openssl-dev;
        sudo apt -y install libecj-java;
        sudo apt -y install libeigen3-dev;
        sudo apt -y install libfftw3-dev;
        sudo apt -y install libflexdock-java;
        sudo apt -y install libfreehep-graphics2d-java;
        sudo apt -y install libfreehep-graphicsio-emf-java;
        sudo apt -y install libgl1-mesa-dev;
        sudo apt -y install libhdf5-dev;
        sudo apt -y install libjaxb-java;
        sudo apt -y install libjeuclid-core-java;
        sudo apt -y install libjgoodies-looks-java;
        sudo apt -y install libjgraphx-java;
        sudo apt -y install libjlatexmath-java;
        sudo apt -y install libjlatexmath-fop-java;
        sudo apt -y install libjogl2-java;
        sudo apt -y install libjrosetta-java;
        sudo apt -y install liblucene4.10-java;
        sudo apt -y install libmatio-dev;
        sudo apt -y install libnum-ocaml-dev;
        sudo apt -y install libopenblas-dev;
        sudo apt -y install libpcre3-dev;
        sudo apt -y install libreadline-dev;
        sudo apt -y install libsaxon-java;
        sudo apt -y install libskinlf-java;
        sudo apt -y install libsleef-dev;
        sudo apt -y install libsuitesparse-dev;
        sudo apt -y install libxml2-dev;
        sudo apt -y install ocaml-nox;
        sudo apt -y install tk-dev;
        sudo apt -y install xvfb;
    - uses: actions/checkout@v2
    - name: configure
      run: |
        cd scilab
        ./configure --enable-build-parser
    - name: make
      run: |
        cd scilab
        make
    - name: test_run (fixed, using xvfb)
      run: |
        cd scilab
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"arnoldi\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"boolean\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"console\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"core\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"data_structures\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"functions\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"interpolation\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"linear_algebra\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"mexlib\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"overloading\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"scicos\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"scicos_blocks\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"sound\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"sparse\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"spreadsheet\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"umfpack\"),exit(0),else,exit(1),end"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"xml\"),exit(0),else,exit(1),end"
    - name: test_run (fixed, only mode_nwni)
      run: |
        cd scilab
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"dynamic_link\",[],[\"mode_nwni\",\"show_error\"]),exit(0),else,exit(1),end"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"io\",[],[\"mode_nwni\",\"show_error\"]),exit(0),else,exit(1),end"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"jvm\",[],[\"mode_nwni\",\"show_error\"]),exit(0),else,exit(1),end"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "if test_run(\"randlib\",[],[\"mode_nwni\",\"show_error\"]),exit(0),else,exit(1),end"
    - name: test_run (not yet fixed, only mode_nwni)
      run: |
        cd scilab
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"ast\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"cacsd\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"fftw\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"elementary_functions\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"differential_equations\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"integer\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"optimization\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"output_stream\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"polynomials\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"signal_processing\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"statistics\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"string\",[],[\"mode_nwni\",\"show_error\"]),exit(0)"
        ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"time\",[],\"mode_nwni\",\"show_error\"]),exit(0)"
    - name: test_run (not yet fixed, using xvfb)
      run: |
        cd scilab
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"graphic_objects\"),exit(0)"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"graphics\"),exit(0)"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"special_functions\"),exit(0)"
        xvfb-run -a ./bin/scilab-cli -noatomsautoload -nouserstartup -e "test_run(\"hdf5\"),exit(0)"
#    - name: make doc-en_US[
#      run: |
#        cd scilab
#        make doc-en_US
#    - name: make check
#      run: make check
#    - name: make distcheck
#      run: make distcheck
